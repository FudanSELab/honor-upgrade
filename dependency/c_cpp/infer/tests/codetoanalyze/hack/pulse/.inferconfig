{
  "scheduler": "callgraph",
  "pulse-only": true,
  "pulse-force-continue": true,
  "hack-models": [
    "models/test_models.sil",
    "models/test_models.hack"
  ],
  "pulse-taint-sources": [
    { "procedure": "$root.Level1::taintSource" },
    { "class_names": ["OuterFile"], "method_names": ["taintSource"] },
    { "class_names": ["OuterFileSuper"], "method_names": ["superTaintSource"] },
    { "class_names": ["Level5Base"], "method_names": ["getSuperContext"] },
    {
      "procedure_regex": ".*",
      "taint_target": [
        "ArgumentsMatchingTypes",
        [
          "SensitiveClass"
        ]
      ]
    },
    { "class_names": ["IntraFile::KnownClass"], "method_names": ["genTaintSource"], kinds: ["BuiltinCatchAll"]}
  ],
  "pulse-taint-sinks": [
    { "procedure": "explicitSinkAllArgs" },
    { "procedure": "$root.Level1::taintSink" },
    { "class_names": ["OuterFile"], "method_names": ["taintSink"] },
    { "class_names": ["DaoQueries"], "method_names": ["query"] },
    { "class_name_regex": "IntraFile::Logger.*" },
    { "class_names": ["ArgIndexMatcher"],
      "method_names": ["sink1", "sink2"],
      "taint_target": ["ArgumentPositions", [1]]
    },
    { "procedure_regex": ".*", kinds: ["BuiltinCatchAll"]}
  ],
  "pulse-taint-policies": [
    {
      "short_description": "Taint flow where a sink is any procedure",
      "taint_flows": [{"source_kinds": ["BuiltinCatchAll"], "sink_kinds": ["BuiltinCatchAll"]}]
    }
  ]
}
