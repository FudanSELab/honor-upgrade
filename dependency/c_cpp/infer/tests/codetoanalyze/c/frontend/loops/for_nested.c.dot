/* @generated */
digraph cfg {
"main.fad58de7366495db_1" [label="1: Start main\nFormals: \nLocals:  i:int j:int k:int \n  " color=yellow style=filled]
	

	 "main.fad58de7366495db_1" -> "main.fad58de7366495db_18" ;
"main.fad58de7366495db_2" [label="2: Exit main \n  " color=yellow style=filled]
	

"main.fad58de7366495db_3" [label="3:  Return Stmt \n   n$0=*&k:int [line 15, column 10]\n " shape="box"]
	

	 "main.fad58de7366495db_3" -> "main.fad58de7366495db_4" ;
"main.fad58de7366495db_4" [label="4:  Return Stmt \n   *&return:int=n$0 [line 15, column 3]\n " shape="box"]
	

	 "main.fad58de7366495db_4" -> "main.fad58de7366495db_2" ;
"main.fad58de7366495db_5" [label="5: + \n  " ]
	

	 "main.fad58de7366495db_5" -> "main.fad58de7366495db_8" ;
"main.fad58de7366495db_6" [label="6:  DeclStmt \n   VARIABLE_DECLARED(i:int); [line 10, column 8]\n  *&i:int=0 [line 10, column 8]\n " shape="box"]
	

	 "main.fad58de7366495db_6" -> "main.fad58de7366495db_5" ;
"main.fad58de7366495db_7" [label="7:  UnaryOperator \n   n$1=*&i:int [line 10, column 27]\n  *&i:int=(n$1 + 1) [line 10, column 27]\n " shape="box"]
	

	 "main.fad58de7366495db_7" -> "main.fad58de7366495db_5" ;
"main.fad58de7366495db_8" [label="8:  BinaryOperatorStmt: LT \n   n$2=*&i:int [line 10, column 19]\n " shape="box"]
	

	 "main.fad58de7366495db_8" -> "main.fad58de7366495db_9" ;
	 "main.fad58de7366495db_8" -> "main.fad58de7366495db_10" ;
"main.fad58de7366495db_9" [label="9: Prune (true branch, for loop) \n   PRUNE((n$2 < 10), true); [line 10, column 19]\n " shape="invhouse"]
	

	 "main.fad58de7366495db_9" -> "main.fad58de7366495db_12" ;
"main.fad58de7366495db_10" [label="10: Prune (false branch, for loop) \n   PRUNE(!(n$2 < 10), false); [line 10, column 19]\n " shape="invhouse"]
	

	 "main.fad58de7366495db_10" -> "main.fad58de7366495db_3" ;
"main.fad58de7366495db_11" [label="11: + \n  " ]
	

	 "main.fad58de7366495db_11" -> "main.fad58de7366495db_14" ;
"main.fad58de7366495db_12" [label="12:  DeclStmt \n   VARIABLE_DECLARED(j:int); [line 11, column 10]\n  *&j:int=0 [line 11, column 10]\n " shape="box"]
	

	 "main.fad58de7366495db_12" -> "main.fad58de7366495db_11" ;
"main.fad58de7366495db_13" [label="13:  UnaryOperator \n   n$3=*&j:int [line 11, column 29]\n  *&j:int=(n$3 + 1) [line 11, column 29]\n " shape="box"]
	

	 "main.fad58de7366495db_13" -> "main.fad58de7366495db_11" ;
"main.fad58de7366495db_14" [label="14:  BinaryOperatorStmt: LT \n   n$4=*&j:int [line 11, column 21]\n " shape="box"]
	

	 "main.fad58de7366495db_14" -> "main.fad58de7366495db_15" ;
	 "main.fad58de7366495db_14" -> "main.fad58de7366495db_16" ;
"main.fad58de7366495db_15" [label="15: Prune (true branch, for loop) \n   PRUNE((n$4 < 10), true); [line 11, column 21]\n " shape="invhouse"]
	

	 "main.fad58de7366495db_15" -> "main.fad58de7366495db_17" ;
"main.fad58de7366495db_16" [label="16: Prune (false branch, for loop) \n   PRUNE(!(n$4 < 10), false); [line 11, column 21]\n " shape="invhouse"]
	

	 "main.fad58de7366495db_16" -> "main.fad58de7366495db_7" ;
"main.fad58de7366495db_17" [label="17:  BinaryOperatorStmt: Assign \n   n$5=*&k:int [line 12, column 11]\n  n$6=*&i:int [line 12, column 15]\n  *&k:int=(n$5 + n$6) [line 12, column 7]\n " shape="box"]
	

	 "main.fad58de7366495db_17" -> "main.fad58de7366495db_13" ;
"main.fad58de7366495db_18" [label="18:  DeclStmt \n   VARIABLE_DECLARED(k:int); [line 9, column 3]\n  *&k:int=0 [line 9, column 3]\n " shape="box"]
	

	 "main.fad58de7366495db_18" -> "main.fad58de7366495db_6" ;
}
