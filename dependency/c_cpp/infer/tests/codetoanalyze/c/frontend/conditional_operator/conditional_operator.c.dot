/* @generated */
digraph cfg {
"test.098f6bcd4621d373_1" [label="1: Start test\nFormals:  b:int\nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int \n  " color=yellow style=filled]
	

	 "test.098f6bcd4621d373_1" -> "test.098f6bcd4621d373_4" ;
	 "test.098f6bcd4621d373_1" -> "test.098f6bcd4621d373_5" ;
"test.098f6bcd4621d373_2" [label="2: Exit test \n  " color=yellow style=filled]
	

"test.098f6bcd4621d373_3" [label="3: + \n   END_BRANCHES\n " ]
	

	 "test.098f6bcd4621d373_3" -> "test.098f6bcd4621d373_8" ;
"test.098f6bcd4621d373_4" [label="4: Prune (true branch, boolean exp (terminated)) \n   n$1=*&b:int [line 12, column 32]\n  PRUNE(n$1, true); [line 12, column 32]\n " shape="invhouse"]
	

	 "test.098f6bcd4621d373_4" -> "test.098f6bcd4621d373_6" ;
"test.098f6bcd4621d373_5" [label="5: Prune (false branch, boolean exp (terminated)) \n   n$1=*&b:int [line 12, column 32]\n  PRUNE(!n$1, false); [line 12, column 32]\n " shape="invhouse"]
	

	 "test.098f6bcd4621d373_5" -> "test.098f6bcd4621d373_7" ;
"test.098f6bcd4621d373_6" [label="6:  ConditionalStmt Branch \n   n$2=*&b:int [line 12, column 36]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:int=n$2 [line 12, column 32]\n " shape="box"]
	

	 "test.098f6bcd4621d373_6" -> "test.098f6bcd4621d373_3" ;
"test.098f6bcd4621d373_7" [label="7:  ConditionalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int=1 [line 12, column 32]\n " shape="box"]
	

	 "test.098f6bcd4621d373_7" -> "test.098f6bcd4621d373_3" ;
"test.098f6bcd4621d373_8" [label="8:  Return Stmt \n   n$3=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int [line 12, column 32]\n  n$4=_fun_test2(n$3:int) [line 12, column 26]\n " shape="box"]
	

	 "test.098f6bcd4621d373_8" -> "test.098f6bcd4621d373_9" ;
"test.098f6bcd4621d373_9" [label="9:  Return Stmt \n   *&return:int=n$4 [line 12, column 19]\n " shape="box"]
	

	 "test.098f6bcd4621d373_9" -> "test.098f6bcd4621d373_2" ;
"test1.5a105e8b9d40e132_1" [label="1: Start test1\nFormals:  b:int\nLocals:  x:int \n  " color=yellow style=filled]
	

	 "test1.5a105e8b9d40e132_1" -> "test1.5a105e8b9d40e132_10" ;
"test1.5a105e8b9d40e132_2" [label="2: Exit test1 \n  " color=yellow style=filled]
	

"test1.5a105e8b9d40e132_3" [label="3:  Return Stmt \n   n$0=*&x:int [line 16, column 10]\n " shape="box"]
	

	 "test1.5a105e8b9d40e132_3" -> "test1.5a105e8b9d40e132_4" ;
"test1.5a105e8b9d40e132_4" [label="4:  Return Stmt \n   *&return:int=n$0 [line 16, column 3]\n " shape="box"]
	

	 "test1.5a105e8b9d40e132_4" -> "test1.5a105e8b9d40e132_2" ;
"test1.5a105e8b9d40e132_5" [label="5: + \n   END_BRANCHES\n " ]
	

	 "test1.5a105e8b9d40e132_5" -> "test1.5a105e8b9d40e132_3" ;
"test1.5a105e8b9d40e132_6" [label="6: Prune (true branch, boolean exp (terminated)) \n   n$1=*&b:int [line 15, column 11]\n  PRUNE(n$1, true); [line 15, column 11]\n " shape="invhouse"]
	

	 "test1.5a105e8b9d40e132_6" -> "test1.5a105e8b9d40e132_8" ;
"test1.5a105e8b9d40e132_7" [label="7: Prune (false branch, boolean exp (terminated)) \n   n$1=*&b:int [line 15, column 11]\n  PRUNE(!n$1, false); [line 15, column 11]\n " shape="invhouse"]
	

	 "test1.5a105e8b9d40e132_7" -> "test1.5a105e8b9d40e132_9" ;
"test1.5a105e8b9d40e132_8" [label="8:  ConditionalStmt Branch \n   n$2=*&b:int [line 15, column 15]\n  *&x:int=n$2 [line 15, column 11]\n " shape="box"]
	

	 "test1.5a105e8b9d40e132_8" -> "test1.5a105e8b9d40e132_5" ;
"test1.5a105e8b9d40e132_9" [label="9:  ConditionalStmt Branch \n   *&x:int=1 [line 15, column 11]\n " shape="box"]
	

	 "test1.5a105e8b9d40e132_9" -> "test1.5a105e8b9d40e132_5" ;
"test1.5a105e8b9d40e132_10" [label="10:  DeclStmt \n   VARIABLE_DECLARED(x:int); [line 15, column 3]\n " shape="box"]
	

	 "test1.5a105e8b9d40e132_10" -> "test1.5a105e8b9d40e132_6" ;
	 "test1.5a105e8b9d40e132_10" -> "test1.5a105e8b9d40e132_7" ;
"test2.ad0234829205b903_1" [label="1: Start test2\nFormals:  x:int\nLocals:  \n  " color=yellow style=filled]
	

	 "test2.ad0234829205b903_1" -> "test2.ad0234829205b903_3" ;
"test2.ad0234829205b903_2" [label="2: Exit test2 \n  " color=yellow style=filled]
	

"test2.ad0234829205b903_3" [label="3:  Return Stmt \n   n$0=*&x:int [line 10, column 27]\n " shape="box"]
	

	 "test2.ad0234829205b903_3" -> "test2.ad0234829205b903_4" ;
"test2.ad0234829205b903_4" [label="4:  Return Stmt \n   *&return:int=n$0 [line 10, column 20]\n " shape="box"]
	

	 "test2.ad0234829205b903_4" -> "test2.ad0234829205b903_2" ;
"test3.8ad8757baa8564dc_1" [label="1: Start test3\nFormals:  b:int\nLocals:  x:int \n  " color=yellow style=filled]
	

	 "test3.8ad8757baa8564dc_1" -> "test3.8ad8757baa8564dc_11" ;
"test3.8ad8757baa8564dc_2" [label="2: Exit test3 \n  " color=yellow style=filled]
	

"test3.8ad8757baa8564dc_3" [label="3:  Return Stmt \n   n$0=*&x:int [line 21, column 10]\n " shape="box"]
	

	 "test3.8ad8757baa8564dc_3" -> "test3.8ad8757baa8564dc_4" ;
"test3.8ad8757baa8564dc_4" [label="4:  Return Stmt \n   *&return:int=n$0 [line 21, column 3]\n " shape="box"]
	

	 "test3.8ad8757baa8564dc_4" -> "test3.8ad8757baa8564dc_2" ;
"test3.8ad8757baa8564dc_5" [label="5: + \n   END_BRANCHES\n " ]
	

	 "test3.8ad8757baa8564dc_5" -> "test3.8ad8757baa8564dc_3" ;
"test3.8ad8757baa8564dc_6" [label="6: Prune (true branch, boolean exp (terminated)) \n   PRUNE(n$1, true); [line 20, column 11]\n " shape="invhouse"]
	

	 "test3.8ad8757baa8564dc_6" -> "test3.8ad8757baa8564dc_8" ;
"test3.8ad8757baa8564dc_7" [label="7: Prune (false branch, boolean exp (terminated)) \n   PRUNE(!n$1, false); [line 20, column 11]\n " shape="invhouse"]
	

	 "test3.8ad8757baa8564dc_7" -> "test3.8ad8757baa8564dc_9" ;
"test3.8ad8757baa8564dc_8" [label="8:  ConditionalStmt Branch \n   *&x:int=n$1 [line 20, column 11]\n " shape="box"]
	

	 "test3.8ad8757baa8564dc_8" -> "test3.8ad8757baa8564dc_5" ;
"test3.8ad8757baa8564dc_9" [label="9:  ConditionalStmt Branch \n   *&x:int=1 [line 20, column 11]\n " shape="box"]
	

	 "test3.8ad8757baa8564dc_9" -> "test3.8ad8757baa8564dc_5" ;
"test3.8ad8757baa8564dc_10" [label="10:  BinaryConditionalStmt Init \n   n$1=*&b:int [line 20, column 11]\n " shape="box"]
	

	 "test3.8ad8757baa8564dc_10" -> "test3.8ad8757baa8564dc_6" ;
	 "test3.8ad8757baa8564dc_10" -> "test3.8ad8757baa8564dc_7" ;
"test3.8ad8757baa8564dc_11" [label="11:  DeclStmt \n   VARIABLE_DECLARED(x:int); [line 20, column 3]\n " shape="box"]
	

	 "test3.8ad8757baa8564dc_11" -> "test3.8ad8757baa8564dc_10" ;
"test4.86985e105f79b95d_1" [label="1: Start test4\nFormals:  b:int\nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$1:int \n  " color=yellow style=filled]
	

	 "test4.86985e105f79b95d_1" -> "test4.86985e105f79b95d_8" ;
"test4.86985e105f79b95d_2" [label="2: Exit test4 \n  " color=yellow style=filled]
	

"test4.86985e105f79b95d_3" [label="3: + \n   END_BRANCHES\n " ]
	

	 "test4.86985e105f79b95d_3" -> "test4.86985e105f79b95d_9" ;
"test4.86985e105f79b95d_4" [label="4: Prune (true branch, boolean exp (terminated)) \n   PRUNE(n$0, true); [line 24, column 33]\n " shape="invhouse"]
	

	 "test4.86985e105f79b95d_4" -> "test4.86985e105f79b95d_6" ;
"test4.86985e105f79b95d_5" [label="5: Prune (false branch, boolean exp (terminated)) \n   PRUNE(!n$0, false); [line 24, column 33]\n " shape="invhouse"]
	

	 "test4.86985e105f79b95d_5" -> "test4.86985e105f79b95d_7" ;
"test4.86985e105f79b95d_6" [label="6:  ConditionalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int=n$0 [line 24, column 33]\n " shape="box"]
	

	 "test4.86985e105f79b95d_6" -> "test4.86985e105f79b95d_3" ;
"test4.86985e105f79b95d_7" [label="7:  ConditionalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int=1 [line 24, column 33]\n " shape="box"]
	

	 "test4.86985e105f79b95d_7" -> "test4.86985e105f79b95d_3" ;
"test4.86985e105f79b95d_8" [label="8:  BinaryConditionalStmt Init \n   n$0=*&b:int [line 24, column 33]\n " shape="box"]
	

	 "test4.86985e105f79b95d_8" -> "test4.86985e105f79b95d_4" ;
	 "test4.86985e105f79b95d_8" -> "test4.86985e105f79b95d_5" ;
"test4.86985e105f79b95d_9" [label="9:  BinaryConditionalStmt Init \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int [line 24, column 33]\n " shape="box"]
	

	 "test4.86985e105f79b95d_9" -> "test4.86985e105f79b95d_10" ;
"test4.86985e105f79b95d_10" [label="10:  Return Stmt \n   n$3=_fun_test2(n$2:int) [line 24, column 27]\n " shape="box"]
	

	 "test4.86985e105f79b95d_10" -> "test4.86985e105f79b95d_11" ;
"test4.86985e105f79b95d_11" [label="11:  Return Stmt \n   *&return:int=n$3 [line 24, column 20]\n " shape="box"]
	

	 "test4.86985e105f79b95d_11" -> "test4.86985e105f79b95d_2" ;
"test5.e3d704f3542b44a6_1" [label="1: Start test5\nFormals:  b:int\nLocals:  \n  " color=yellow style=filled]
	

	 "test5.e3d704f3542b44a6_1" -> "test5.e3d704f3542b44a6_8" ;
"test5.e3d704f3542b44a6_2" [label="2: Exit test5 \n  " color=yellow style=filled]
	

"test5.e3d704f3542b44a6_3" [label="3: + \n   END_BRANCHES\n " ]
	

	 "test5.e3d704f3542b44a6_3" -> "test5.e3d704f3542b44a6_9" ;
"test5.e3d704f3542b44a6_4" [label="4: Prune (true branch, boolean exp (terminated)) \n   PRUNE(n$0, true); [line 26, column 27]\n " shape="invhouse"]
	

	 "test5.e3d704f3542b44a6_4" -> "test5.e3d704f3542b44a6_6" ;
"test5.e3d704f3542b44a6_5" [label="5: Prune (false branch, boolean exp (terminated)) \n   PRUNE(!n$0, false); [line 26, column 27]\n " shape="invhouse"]
	

	 "test5.e3d704f3542b44a6_5" -> "test5.e3d704f3542b44a6_7" ;
"test5.e3d704f3542b44a6_6" [label="6:  ConditionalStmt Branch \n   *&return:int=n$0 [line 26, column 27]\n " shape="box"]
	

	 "test5.e3d704f3542b44a6_6" -> "test5.e3d704f3542b44a6_3" ;
"test5.e3d704f3542b44a6_7" [label="7:  ConditionalStmt Branch \n   *&return:int=1 [line 26, column 27]\n " shape="box"]
	

	 "test5.e3d704f3542b44a6_7" -> "test5.e3d704f3542b44a6_3" ;
"test5.e3d704f3542b44a6_8" [label="8:  BinaryConditionalStmt Init \n   n$0=*&b:int [line 26, column 27]\n " shape="box"]
	

	 "test5.e3d704f3542b44a6_8" -> "test5.e3d704f3542b44a6_4" ;
	 "test5.e3d704f3542b44a6_8" -> "test5.e3d704f3542b44a6_5" ;
"test5.e3d704f3542b44a6_9" [label="9:  Return Stmt \n  " shape="box"]
	

	 "test5.e3d704f3542b44a6_9" -> "test5.e3d704f3542b44a6_2" ;
"test6.4cfad7076129962e_1" [label="1: Start test6\nFormals:  p:int*\nLocals:  z:int \n  " color=yellow style=filled]
	

	 "test6.4cfad7076129962e_1" -> "test6.4cfad7076129962e_10" ;
"test6.4cfad7076129962e_2" [label="2: Exit test6 \n  " color=yellow style=filled]
	

"test6.4cfad7076129962e_3" [label="3:  Return Stmt \n   n$0=*&z:int [line 30, column 10]\n " shape="box"]
	

	 "test6.4cfad7076129962e_3" -> "test6.4cfad7076129962e_4" ;
"test6.4cfad7076129962e_4" [label="4:  Return Stmt \n   *&return:int=n$0 [line 30, column 3]\n " shape="box"]
	

	 "test6.4cfad7076129962e_4" -> "test6.4cfad7076129962e_2" ;
"test6.4cfad7076129962e_5" [label="5: + \n   END_BRANCHES\n " ]
	

	 "test6.4cfad7076129962e_5" -> "test6.4cfad7076129962e_3" ;
"test6.4cfad7076129962e_6" [label="6: Prune (true branch, boolean exp (terminated)) \n   PRUNE(1, true); [line 29, column 11]\n " shape="invhouse"]
	

	 "test6.4cfad7076129962e_6" -> "test6.4cfad7076129962e_8" ;
"test6.4cfad7076129962e_7" [label="7: Prune (false branch, boolean exp (terminated)) \n   PRUNE(!1, false); [line 29, column 11]\n " shape="invhouse"]
	

	 "test6.4cfad7076129962e_7" -> "test6.4cfad7076129962e_9" ;
"test6.4cfad7076129962e_8" [label="8:  ConditionalStmt Branch \n   n$1=*&p:int* [line 29, column 16]\n  n$2=*n$1:int [line 29, column 15]\n  *&z:int=n$2 [line 29, column 11]\n " shape="box"]
	

	 "test6.4cfad7076129962e_8" -> "test6.4cfad7076129962e_5" ;
"test6.4cfad7076129962e_9" [label="9:  ConditionalStmt Branch \n   *&z:int=0 [line 29, column 11]\n " shape="box"]
	

	 "test6.4cfad7076129962e_9" -> "test6.4cfad7076129962e_5" ;
"test6.4cfad7076129962e_10" [label="10:  DeclStmt \n   VARIABLE_DECLARED(z:int); [line 29, column 3]\n " shape="box"]
	

	 "test6.4cfad7076129962e_10" -> "test6.4cfad7076129962e_6" ;
	 "test6.4cfad7076129962e_10" -> "test6.4cfad7076129962e_7" ;
"test7.b04083e53e242626_1" [label="1: Start test7\nFormals:  b:int\nLocals:  \n  " color=yellow style=filled]
	

	 "test7.b04083e53e242626_1" -> "test7.b04083e53e242626_8" ;
"test7.b04083e53e242626_2" [label="2: Exit test7 \n  " color=yellow style=filled]
	

"test7.b04083e53e242626_3" [label="3: + \n   END_BRANCHES\n " ]
	

	 "test7.b04083e53e242626_3" -> "test7.b04083e53e242626_9" ;
"test7.b04083e53e242626_4" [label="4: Prune (true branch, boolean exp (terminated)) \n   PRUNE(n$1, true); [line 33, column 27]\n " shape="invhouse"]
	

	 "test7.b04083e53e242626_4" -> "test7.b04083e53e242626_6" ;
"test7.b04083e53e242626_5" [label="5: Prune (false branch, boolean exp (terminated)) \n   PRUNE(!n$1, false); [line 33, column 27]\n " shape="invhouse"]
	

	 "test7.b04083e53e242626_5" -> "test7.b04083e53e242626_7" ;
"test7.b04083e53e242626_6" [label="6:  ConditionalStmt Branch \n   *&return:int=n$1 [line 33, column 27]\n " shape="box"]
	

	 "test7.b04083e53e242626_6" -> "test7.b04083e53e242626_3" ;
"test7.b04083e53e242626_7" [label="7:  ConditionalStmt Branch \n   *&return:int=2 [line 33, column 27]\n " shape="box"]
	

	 "test7.b04083e53e242626_7" -> "test7.b04083e53e242626_3" ;
"test7.b04083e53e242626_8" [label="8:  BinaryConditionalStmt Init \n   n$0=_fun_test2(2:int) [line 33, column 37]\n  n$1=_fun_test2((2 + n$0):int) [line 33, column 27]\n " shape="box"]
	

	 "test7.b04083e53e242626_8" -> "test7.b04083e53e242626_4" ;
	 "test7.b04083e53e242626_8" -> "test7.b04083e53e242626_5" ;
"test7.b04083e53e242626_9" [label="9:  Return Stmt \n  " shape="box"]
	

	 "test7.b04083e53e242626_9" -> "test7.b04083e53e242626_2" ;
}
