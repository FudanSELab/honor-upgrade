/* @generated */
digraph cfg {
"dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_1" [label="1: Start Autoreleasepool.dealloc\nFormals:  self:Autoreleasepool*\nLocals:  \n  " color=yellow style=filled]
	

	 "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_1" -> "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_4" ;
"dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_2" [label="2: Exit Autoreleasepool.dealloc \n  " color=yellow style=filled]
	

"dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_3" [label="3:  Call dealloc \n  " shape="box"]
	

	 "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_3" -> "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_2" ;
"dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_4" [label="4:  Call dealloc \n   n$0=*&self:Autoreleasepool* [line 14, column 1]\n  n$1=_fun___objc_get_ref_count(n$0:Autoreleasepool*) [line 14, column 1]\n  n$2=_fun___objc_set_ref_count(n$0:Autoreleasepool*,(n$1 - 1):unsigned int) [line 14, column 1]\n  n$3=_fun___objc_get_ref_count(n$0:Autoreleasepool*) [line 14, column 1]\n " shape="box"]
	

	 "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_4" -> "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_5" ;
	 "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_4" -> "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_6" ;
"dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_5" [label="5: Prune (true branch, if (terminated)) \n   PRUNE((n$3 == 0), true); [line 14, column 1]\n " shape="invhouse"]
	

	 "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_5" -> "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_3" ;
"dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_6" [label="6: Prune (false branch, if (terminated)) \n   PRUNE((n$3 != 0), false); [line 14, column 1]\n " shape="invhouse"]
	

	 "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_6" -> "dealloc#Autoreleasepool#[instance.ed5a856d53a72eba_2" ;
"test#Autoreleasepool#[instance].5dda95b0791185fb_1" [label="1: Start Autoreleasepool.test\nFormals:  self:Autoreleasepool*\nLocals:  i:int \n  " color=yellow style=filled]
	

	 "test#Autoreleasepool#[instance].5dda95b0791185fb_1" -> "test#Autoreleasepool#[instance].5dda95b0791185fb_3" ;
"test#Autoreleasepool#[instance].5dda95b0791185fb_2" [label="2: Exit Autoreleasepool.test \n  " color=yellow style=filled]
	

"test#Autoreleasepool#[instance].5dda95b0791185fb_3" [label="3:  Call _objc_autoreleasePoolPush \n   n$0=_fun__objc_autoreleasePoolPush() [line 17, column 3]\n " shape="box"]
	

	 "test#Autoreleasepool#[instance].5dda95b0791185fb_3" -> "test#Autoreleasepool#[instance].5dda95b0791185fb_5" ;
"test#Autoreleasepool#[instance].5dda95b0791185fb_4" [label="4:  Call _objc_autoreleasePoolPop \n   n$1=_fun__objc_autoreleasePoolPop() [line 17, column 3]\n " shape="box"]
	

	 "test#Autoreleasepool#[instance].5dda95b0791185fb_4" -> "test#Autoreleasepool#[instance].5dda95b0791185fb_2" ;
"test#Autoreleasepool#[instance].5dda95b0791185fb_5" [label="5:  DeclStmt \n   VARIABLE_DECLARED(i:int); [line 18, column 5]\n  *&i:int=0 [line 18, column 5]\n " shape="box"]
	

	 "test#Autoreleasepool#[instance].5dda95b0791185fb_5" -> "test#Autoreleasepool#[instance].5dda95b0791185fb_4" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_1" [label="1: Start Autoreleasepool.test1\nFormals:  self:Autoreleasepool*\nLocals:  i:int i:int \n  " color=yellow style=filled]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_1" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_4" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_2" [label="2: Exit Autoreleasepool.test1 \n  " color=yellow style=filled]
	

"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_3" [label="3: + \n  " ]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_3" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_6" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_4" [label="4:  DeclStmt \n   VARIABLE_DECLARED(i:int); [line 23, column 8]\n  *&i:int=0 [line 23, column 8]\n " shape="box"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_4" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_3" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_5" [label="5:  UnaryOperator \n   n$2=*&i:int [line 23, column 27]\n  *&i:int=(n$2 + 1) [line 23, column 27]\n " shape="box"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_5" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_3" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_6" [label="6:  BinaryOperatorStmt: LT \n   n$3=*&i:int [line 23, column 19]\n " shape="box"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_6" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_7" ;
	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_6" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_8" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_7" [label="7: Prune (true branch, for loop) \n   PRUNE((n$3 < 10), true); [line 23, column 19]\n " shape="invhouse"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_7" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_9" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_8" [label="8: Prune (false branch, for loop) \n   PRUNE(!(n$3 < 10), false); [line 23, column 19]\n " shape="invhouse"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_8" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_2" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_9" [label="9:  Call _objc_autoreleasePoolPush \n   n$4=_fun__objc_autoreleasePoolPush() [line 24, column 5]\n " shape="box"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_9" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_11" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_10" [label="10:  Call _objc_autoreleasePoolPop \n   n$5=_fun__objc_autoreleasePoolPop() [line 24, column 5]\n " shape="box"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_10" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_5" ;
"test1#Autoreleasepool#[instance].8b57d6a62c2139e9_11" [label="11:  DeclStmt \n   VARIABLE_DECLARED(i:int); [line 25, column 7]\n  *&i:int=0 [line 25, column 7]\n " shape="box"]
	

	 "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_11" -> "test1#Autoreleasepool#[instance].8b57d6a62c2139e9_10" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_1" [label="1: Start Autoreleasepool.test2\nFormals:  self:Autoreleasepool*\nLocals:  i:int j:int k:int \n  " color=yellow style=filled]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_1" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_4" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_2" [label="2: Exit Autoreleasepool.test2 \n  " color=yellow style=filled]
	

"test2#Autoreleasepool#[instance].60c1be89b3739d7c_3" [label="3: + \n  " ]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_3" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_6" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_4" [label="4:  DeclStmt \n   VARIABLE_DECLARED(i:int); [line 31, column 8]\n  *&i:int=0 [line 31, column 8]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_4" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_3" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_5" [label="5:  UnaryOperator \n   n$7=*&i:int [line 31, column 27]\n  *&i:int=(n$7 + 1) [line 31, column 27]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_5" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_3" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_6" [label="6:  BinaryOperatorStmt: LT \n   n$8=*&i:int [line 31, column 19]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_6" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_7" ;
	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_6" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_8" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_7" [label="7: Prune (true branch, for loop) \n   PRUNE((n$8 < 10), true); [line 31, column 19]\n " shape="invhouse"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_7" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_9" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_8" [label="8: Prune (false branch, for loop) \n   PRUNE(!(n$8 < 10), false); [line 31, column 19]\n " shape="invhouse"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_8" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_2" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_9" [label="9:  Call _objc_autoreleasePoolPush \n   n$9=_fun__objc_autoreleasePoolPush() [line 32, column 5]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_9" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_12" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_10" [label="10:  Call _objc_autoreleasePoolPop \n   n$10=_fun__objc_autoreleasePoolPop() [line 32, column 5]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_10" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_5" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_11" [label="11: + \n  " ]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_11" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_14" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_12" [label="12:  DeclStmt \n   VARIABLE_DECLARED(j:int); [line 33, column 12]\n  *&j:int=0 [line 33, column 12]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_12" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_11" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_13" [label="13:  UnaryOperator \n   n$11=*&j:int [line 33, column 31]\n  *&j:int=(n$11 + 1) [line 33, column 31]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_13" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_11" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_14" [label="14:  BinaryOperatorStmt: LT \n   n$12=*&j:int [line 33, column 23]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_14" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_15" ;
	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_14" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_16" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_15" [label="15: Prune (true branch, for loop) \n   PRUNE((n$12 < 10), true); [line 33, column 23]\n " shape="invhouse"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_15" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_17" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_16" [label="16: Prune (false branch, for loop) \n   PRUNE(!(n$12 < 10), false); [line 33, column 23]\n " shape="invhouse"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_16" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_10" ;
"test2#Autoreleasepool#[instance].60c1be89b3739d7c_17" [label="17:  DeclStmt \n   VARIABLE_DECLARED(k:int); [line 34, column 9]\n  *&k:int=0 [line 34, column 9]\n " shape="box"]
	

	 "test2#Autoreleasepool#[instance].60c1be89b3739d7c_17" -> "test2#Autoreleasepool#[instance].60c1be89b3739d7c_13" ;
}
